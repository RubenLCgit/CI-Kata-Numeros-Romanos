# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file Kata-Numeros-Romanos/pom.xml
    - name: Run tests with JUnit
      run: mvn -B test --file Kata-Numeros-Romanos/pom.xml
    - name: Install Super-Linter
      uses: github/super-linter@v4
      env:
        VALIDATE_ALL_CODEBASE: true
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LOG_LEVEL: debug
        OUTPUT_FORMAT: json

    - name: Print Super-Linter Errors
      if: always()
      run: |
        echo "$(<./super-linter/output.json)"
        echo "Errors detected by Super Linter:"
        cat ./super-linter/output.json | jq -r '.files[] | select(.errors != null) | "\(.name):\n" + "    " + (.errors[].message | gsub("\n"; "\n    "))'
